{"version":3,"sources":["styles/styles.js","components/MovieDetailComponent.js","components/MovieListComponent.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","card","padding","spacing","textAlign","color","palette","text","secondary","MovieCard","itemAlign","MovieDetailComponent","movie","classes","imdb","o","push","casts","cast","genres","g","Card","className","border","Img","variant","src","poster","style","width","marginTop","alignSelf","Body","Title","title","Text","fullplot","year","map","n","i","Input","defaultValue","genre","MoviesListComponent","filter","movies","React","useState","setMovieDetail","setMovie","onMovieClickHandler","ev","movieId","currentTarget","getAttribute","length","id","Grid","container","to","textDecoration","CardColumns","onClick","value","undefined","height","fontSize","rating","path","SortByGenreComponent","withStyles","mainContainer","marginLeft","marginRight","borderRadius","button","cursor","margin","fontWeight","background","onChange","setMoviesState","setGenreTypeState","useEffect","moviesGenres","Set","flat","sortedMovies","sortMovies","genreName","includes","alert","JSON","stringify","Typography","item","index","Button","App","setMovies","setFilter","Promise","resolve","fetch","then","response","json","error","console","log","fontFamily","Divider","f","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a9054ad.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nexport const lookAndFeel = () => {\r\n    return {\r\n      mainContainer: {\r\n        marginLeft: \"20%\",\r\n        marginTop: 0,\r\n        marginRight: \"20%\",\r\n        border: \"1px solid blue\",\r\n        flexGrow: 1,\r\n        padding: \"10px\",\r\n        borderRadius: \"5px\"\r\n      },\r\n      button: {\r\n        padding: \"5px\",\r\n        cursor: \"pointer\",\r\n        margin: \"10px\",\r\n        fontWeight: \"bold\",\r\n        \"&:hover\": {\r\n          background: \"blue\",\r\n        },\r\n      },\r\n    };\r\n  };\r\n  \r\n  export const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    card: {\r\n      padding: theme.spacing(4),\r\n      textAlign: \"center\",\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    MovieCard: {\r\n      itemAlign: \"center\",\r\n      textAlign: \"center\",\r\n    },\r\n  }));","import React,{Fragment} from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport {useStyles } from '../styles/styles';\r\nimport { Input } from '@material-ui/core';\r\n\r\nconst MovieDetailComponent = ({ movie}) => {\r\n    const classes = useStyles();\r\n  \r\n    const updateMovie = (ev) => {\r\n      //alert(ev.currentTarget.getAttribute('id'));\r\n      let operation = ev.currentTarget.id.substring(0, 1);\r\n      let movieId = parseInt(ev.currentTarget.id.substring(1));\r\n    };\r\n\r\n    //alert(JSON.stringify(movie.year));\r\n    \r\n    var imdb = []\r\n    for(var o in movie.imdb) {\r\n      imdb.push(movie.imdb[o]);\r\n    }\r\n    var casts=[];\r\n    for(var o in movie.cast){\r\n      casts.push(movie.cast[o]);\r\n    }\r\n    var genres=[];\r\n    for(var g in movie.genres)\r\n    {\r\n      genres.push(movie.genres[g]);\r\n    }\r\n    \r\n    //alert(JSON.stringify(casts));\r\n    //alert(imdb);\r\n    //alert(JSON.stringify(movie.imdb));\r\n\r\n    const editCast = (ev) =>{\r\n      alert(ev.currentTarget);\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n      <Card className={classes.MovieCard} border=\"info\">\r\n        <Card.Img\r\n          variant=\"top\"\r\n          src={movie.poster}\r\n          style={{ width: \"18rem\", marginTop: \"10px\", alignSelf: \"center\" }}\r\n        />\r\n        <Card.Body>\r\n          <Card.Title><b>{movie.title}</b></Card.Title>\r\n          <br/>\r\n          <Card.Text>{movie.fullplot}</Card.Text>\r\n          <Card.Text><strong>Year : </strong> {movie.year}</Card.Text>\r\n          <Card.Text><b>IMDB Rating  </b> { imdb[0] } </Card.Text>\r\n          <Card.Text><strong>Crew</strong></Card.Text>\r\n          <Card.Text> \r\n            {\r\n            casts.map((n,i)=>{\r\n                return(\r\n                <Input key={i} defaultValue={ n } ></Input>\r\n                )\r\n              })\r\n            }</Card.Text>\r\n           <Card.Text><strong>Genre</strong></Card.Text> \r\n          <Card.Text>\r\n          {\r\n          genres.map((genre)=>{\r\n          return(\r\n            <Input defaultValue={ genre } key={genre}></Input>\r\n          )\r\n          })\r\n          }\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  export default MovieDetailComponent;","import React,{Fragment} from 'react';\r\nimport { BrowserRouter as Router, Link, Route , Switch} from 'react-router-dom';\r\nimport { Card, CardColumns} from \"react-bootstrap\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MovieDetailComponent from \"./MovieDetailComponent\";\r\nimport { useStyles } from '../styles/styles';\r\n\r\nconst MoviesListComponent = ({filter, movies}) => {\r\n  \r\n    const [movieDetail, setMovieDetail] = React.useState(false);\r\n    const [movie, setMovie] = React.useState([]);\r\n    const [genre, setGenre] = React.useState([]);\r\n\r\n    const classes = useStyles();\r\n    \r\n    const onMovieClickHandler = (ev) => {\r\n      var movie = null;\r\n      let movieId = ev.currentTarget.getAttribute(\"id\");\r\n      for (var i = 0; i < movies.length; i++) {\r\n        if (movies[i].id == movieId) {\r\n          movie = movies[i];\r\n          break;\r\n        }\r\n      }\r\n      //alert(movie.title)\r\n      setMovie(movie);\r\n      setMovieDetail(true);\r\n    };\r\n\r\n    return (\r\n      <Router>\r\n      <Fragment>\r\n        <div className={classes.root}>\r\n          <Grid container spacing={3}>\r\n            {movies.map((movie) => {\r\n              return (\r\n                <Link to=\"/movie\" key={movie.id} style={{textDecoration: 'none'}}>\r\n                <CardColumns key={movie.id} className={classes.card}>\r\n                  <Card\r\n                    style={{ width: \"18rem\" }}\r\n                    className=\"box\"\r\n                    onClick={onMovieClickHandler}\r\n                    id={movie.id}\r\n                    value={movie}\r\n                  >\r\n                    {movie.poster != undefined ? (\r\n                      <Card.Img\r\n                        variant=\"top\"\r\n                        src={movie.poster}\r\n                        style={{ height: \"400px\", width: \"285px\" }}\r\n                      />\r\n                    ) : (\r\n                      <h1\r\n                        style={{\r\n                          fontSize: \"4rem\",\r\n                          height: \"390px\",\r\n                          width: \"285px\",\r\n                        }}\r\n                      >\r\n                        Not Available\r\n                      </h1>\r\n                    )}\r\n                    <Card.Body style={{height: '150px'}}>\r\n                      <Card.Title>{movie.title} </Card.Title>\r\n                      <Card.Text>\r\n                        <b>IMDB Rating :</b> {movie.imdb.rating}\r\n                      </Card.Text>\r\n                      <Card.Text>\r\n                        <b>Genres : </b> {movie.genres}{\" \"}\r\n                      </Card.Text>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </CardColumns>\r\n                </Link>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </div>\r\n        <Switch>\r\n            <Route path=\"/movie\">\r\n              <MovieDetailComponent movie={movie} />\r\n            </Route>\r\n          </Switch>\r\n        {/* {movieDetail && <MovieDetailComponent movie={movie} />} */}\r\n      </Fragment>\r\n      </Router>\r\n    );\r\n  };\r\n\r\n  export default MoviesListComponent;","import React, { Fragment } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button } from \"react-bootstrap\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Divider, Typography } from \"@material-ui/core\";\nimport MoviesListComponent from \"./components/MovieListComponent\";\nimport { lookAndFeel } from \"../src/styles/styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\n \n\nconst getMovies = () => {\n  const promise = new Promise((resolve) => {\n    fetch(\"/api/movies\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((movies) => {\n        resolve(movies);\n      });\n  });\n  return promise;\n};\n\n\nconst App = () => {\n  \n  const [movies, setMovies] = React.useState([]);\n  const [filter, setFilter] = React.useState({genre: []});\n  // for sorting or filtering\n  \n  React.useEffect(() => {\n    getMovies().then((movies) => {\n      setMovies(movies);\n    },(error)=>{console.log(error)});\n  }, []);\n\n  const applyFilter =(f)=>{\n    alert(JSON.stringify(f));\n    setFilter(f);\n  }\n\n\n  return (\n    <Fragment>\n        <Typography variant=\"h2\" style={{textAlign: 'center',fontFamily: 'Calibri'}}>The Modern Data</Typography>\n        <Divider />\n        <SortByGenreComponent  movies={movies} onChange={applyFilter} />\n        <Divider/> \n         <MoviesListComponent filter={filter} movies={movies} />\n    </Fragment>\n  );\n};\n\n\n \n  \n  // return(\n  //   <div>\n  //     <MoviesListComponent movies={movies} />\n  //   </div>\n  // )\n\n\nconst SortByGenreComponent = withStyles(lookAndFeel)(({ movies, classes, onChange }) => {  \n\n  const [moviesState, setMoviesState] = React.useState([]);  \n  const [genreTypeState,setGenreTypeState] = React.useState([]);\n\n  React.useEffect(()=>{\n    var g=[];\n    g.push({\"type\": \"String\",\"state\":false});\n    setGenreTypeState(g);\n  },[]);\n\n  const genreTypeChanged = (gt) =>{\n    var filter ={};\n    // filter.genreType = genreTypeState;\n    var j=[];\n    j.push({\"type\": \"String\",\"state\":gt.value});\n    filter.genreType=j;\n    setGenreTypeState(j);\n\n    onChange(filter);\n  }\n\n  //alert(\"Movie State :\"+moviesState);\n  const genres = [];\n  for (var i = 0; i < movies.length; i++) {\n    genres.push(movies[i].genres);\n  }\n\n  //to put distict value  all array into one\n  const moviesGenres = [...new Set(genres.flat(1))];\n\n  var sortedMovies = []\n\n  const sortMovies = (ev) => {\n    let genreName = ev.currentTarget.value;\n      for(var i=0;i<movies.length;i++)\n      {\n        if(movies[i].genres.includes(genreName))\n        {\n            sortedMovies.push(movies[i]);\n        }\n      }\n      \n      alert(JSON.stringify(sortedMovies));\n\n      setMoviesState(sortedMovies);\n\n      // var sortedMoviesTitle = [];\n      //   for(var i=0;i<sortedMovies.length;i++)\n      //   {\n      //     sortedMoviesTitle.push(sortedMovies[i].title);\n      //   }\n      //       alert(sortedMoviesTitle); \n    };\n  \n  const moviesStateChanged = (mg) =>{\n      var filter={}; \n      \n  } \n  return (\n    <>\n      <Typography style={{ textAlign: \"center\" }}>Sort By Genre</Typography>\n      <div className={classes.mainContainer}>\n        <Grid container spacing={4}>\n          <Grid item>\n            {moviesGenres.map((genre, index) => {\n              return (\n                <Button\n                  variant=\"contained\"\n                  className={classes.button}\n                  onClick={sortMovies}\n                  id={genre}\n                  key={index}\n                  value={genre}\n                >\n                  {genre}\n                </Button>\n              );\n            })}\n          </Grid>\n        </Grid>\n      </div>\n\n    </>\n  );\n});\n\n\n//MovieListComponent\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}